---
title: 
  "![](www/images/act-logo.png){width=6in}
  <br>
  Rochester Region Federal Funds Dashboard"
subtitle: "How the Rochester Region Is Spending Federal Recovery Dollars"
date: '`r readxl::read_xlsx("data/data-raw/dashboard-data.xlsx") |> dplyr::pull("current_as_of") |> unique() |> stringr::str_remove(" UTC") |> stringr::str_replace_all("-", "/") |> lubridate::ymd() |> format("%m/%d%/%y") `'
date-format: "MMMM D, YYYY"
language:
  title-block-published: "Data as of"
editor_options: 
  chunk_output_type: console
execute:
  echo: false
  message: false
  warning: false
  error: false
css: style.css
knitr:
  opts_chunk: 
    dev: "ragg_png"
---

```{r, echo=FALSE, fig.align='center'}
#| out-width: 500
# knitr::include_graphics(here::here("www", "images", "act-logo.png"), dpi = 800)
```

```{r}
ragg_png = function(..., res = 192) {
  ragg::agg_png(..., res = res, units = "in")
}
knitr::opts_chunk$set(dev = "ragg_png", fig.ext = "png")
```

```{r setup}
librarian::shelf(tidyverse, 
                 here,
                 urbnthemes,
                 gt,
                 tidycensus, 
                 mapview, 
                 leaflet, 
                 leaflet.extras2, 
                 leaflet.providers, 
                 leafpop,
                 sf,
                 tmap,
                 ggtext,
                 boxr,
                 epoxy,
                 htmltools)
options(tigris_use_cache = TRUE)
set_urbn_defaults(style = "print", base_size = 12)
box_auth()
racf_palette <- c("#D6A123", "#ED0A72", "#D442CF", "#696B4F", "#8FAEBE")

```

```{r load-data}

data_url <- "https://urbanorg.box.com/shared/static/a62wrsemjiaezr43c3lnkqlf2t69ymlv.xlsx"
download.file(data_url, "data/data-raw/dashboard-data.xlsx")

data <- 
  readxl::read_xlsx("data/data-raw/dashboard-data.xlsx") %>% 
  mutate(allocation = str_remove_all(allocation, '[,$]') %>% as.numeric()) %>% 
  mutate(racf_categories = str_to_title(racf_categories)) %>% 
  select(-c(matches("notes"), expiration, is_expired, notes, summary_description, flexible_fund, amount_exact))


source <-
  glue::glue('Source: Urban Institute calculations of data from {tags$a("City of Rochester ARPA Reporting Dashboard", href = "https://app.powerbi.com/view?r=eyJrIjoiMmFkYzI3ZTAtMjIzMS00YWQ0LTgyZjItYmY5YTIxYTIxNzUwIiwidCI6ImJlMjdkYTJlLTk0YjQtNDFkYS05NDdkLWY2MDJkNjBlODA3YyJ9&pageName=ReportSectioneb9f6e0e0a6d0db032dc")} and {tags$a("Monroe County Recovery Plan 2023 Annual Report", href = "https://www.monroecounty.gov/files/planning/arpa/July_2023_ARPA_Report_V3_8-22-23_With_Attachments.pdf")}')

```

```{r}
building_blocks_pct <-
  data %>% 
  mutate(is_building_block = !is.na(building_blocks)) %>% 
  summarise(allocation = sum(allocation, na.rm = TRUE), .by = "is_building_block") %>% 
  mutate(total = sum(allocation),
         pct= allocation / total) %>% 
  filter(is_building_block == TRUE) %>% 
  pull(pct) %>% 
  scales::label_percent(digits = 1)(.) %>% 
  as.character()

building_blocks_by_geography_pct <-
  data %>% 
  mutate(is_building_block = !is.na(building_blocks)) %>% 
  summarise(allocation = sum(allocation, na.rm = TRUE), .by = c("is_building_block", "geography")) %>% 
  mutate(total = sum(allocation),
         pct= allocation / total, ,.by = c("geography")) %>% 
  filter(is_building_block == TRUE) %>% 
  pull(pct) %>% 
  scales::label_percent(digits = 1)(.) %>% 
  as.character() %>% 
  set_names(c("monroe", "rochester"))

last_update_date <-
  readxl::read_xlsx("data/data-raw/dashboard-data.xlsx") |> dplyr::pull("current_as_of") |> unique() |> stringr::str_remove(" UTC") %>% as_date() %>% format("%m/%d%/%y")
```

The federal government provided unprecedented levels of flexible relief funds to
local governments across the country, [including those in the Rochester
region](https://www.urban.org/sites/default/files/publication/105119/harnessing-federal-funds-for-inclusive-recovery-in-rochester-ny_0.pdf),
to help them recover from the economic impacts of the COVID-19 pandemic. As the
City of Rochester and Monroe County continue to allocate and spend these federal
recovery funds, they have an unparalleled opportunity to not only stimulate
economic recovery from the pandemic, but to also increase equity and remediate
some of the past inequities that have been [built into our nation's
laws](https://books.google.com/books?hl=en&lr=&id=SdtDDQAAQBAJ&oi=fnd&pg=PT4&dq=color+of+law&ots=RL_u4QqRBH&sig=eYYnHvwibwB_XBfpzr0jQVK2SOs#v=onepage&q=color%20of%20law&f=false)
and programs. To do so, the funds [must be
used](https://www.urban.org/research/publication/inclusive-recovery-us-cities)
to ensure that everyone--especially historically excluded groups--can benefit
from and contribute to economic growth.

To increase transparency in this process, this dashboard tracks data on how the
City of Rochester and Monroe County have allocated and spent a portion of these
recovery funds: [State and Local Fiscal Recovery
Funds](https://home.treasury.gov/policy-issues/coronavirus/assistance-for-state-local-and-tribal-governments/state-and-local-fiscal-recovery-funds#:~:text=The%20Coronavirus%20State%20and%20Local,COVID%2D19%20public%20health%20emergency)
(SLFRF) provided through the American Rescue Plan Act (ARPA). SLFRF must be
obligated by the end of 2024 and spent by the end of 2026. The dashboard focuses
on SLFRF because of their flexibility in giving local governments authority to
decide how they should be spent. And, they tended to be spent on longer term recovery
efforts rather than on short term emergency public health response, which was
the focus of Coronavirus Aid, Relief, and Economic Security Act (CARES Act)
dollars.

The dashboard starts by showing what percent of the allocations align with the
building blocks of an inclusive recovery, which are five strategies for spending
that direct funds to support equity and inclusion. These five building blocks
are: create jobs for those who face the greatest barriers to employment, connect
historically excluded residents to jobs and economic opportunities, reinvest in
disinvested communities, stabilize housing and expand affordable housing, and
create opportunities for low-wealth households to build wealth. As of
`r last_update_date`, `r building_blocks_pct` of the dollars in the City of Rochester and Monroe
County were allocated toward programs and initiatives that align with these
building blocks.

The dashboard then shows more broadly how funds are being spent by policy area
and subtopic. Next, it explores how well the allocations align with Rochester
Area Community Foundation's priorities. Finally, it shows how the City of
Rochester's SLFRF capital investments map onto racial characteristics of
neighborhoods within the region, as well as how they overlap with the original
redlining maps for the city. (Redlining refers to the process in which borrowers
are denied access to credit due to the racial composition of their
neighborhood.) At the end of the dashboard is a table showing all of the
allocations and their descriptions in detail.

Note that this dashboard does not track outcomes from these investments -- it
only shows where the dollars are flowing. Simply allocating funds toward topics
that could increase equity and inclusion does not guarantee that they do so.
Future research efforts should closely monitor outcomes and impacts from the
recovery dollar investments to ensure that they close equity gaps exacerbated by
the pandemic and address the root causes of inequities.

## How Much is Being Spent on an Inclusive Recovery?

[Previous work by the Urban
Institute](https://www.urban.org/sites/default/files/publication/105290/aligning-the-use-of-recovery-funds-with-community-goals-in-rochester-new-york.pdf)
identified five building blocks of an inclusive recovery. These building blocks
were created in collaboration with community stakeholders across the country and
include:

1.  **Create jobs** for residents hardest hit by the pandemic or who face the
    greatest barriers to employment
2.  **Connect residents to jobs** and economic opportunities, including through
    workforce development, child care, transportation, or broadband
3.  **Reinvest in disinvested communities** and address long-standing
    disparities in access to education, capital, economic opportunities, and
    climate resilience
4.  **Stabilize housing and expand affordable housing** options for low-income
    households and housing-insecure renters
5.  Create opportunities for low-wealth households to **build wealth**.

Across all allocations for the city and county, **`r building_blocks_pct`** of the funding has
been allocated towards these strategies that promote inclusive recovery and
equitable growth. The figure below shows the total amount of funding for
Rochester and Monroe County that was allocated to programs that align with these
building blocks, based on review of the program description and goals. `r building_blocks_by_geography_pct[["rochester"]]` of the City of Rochester's funds were allocated toward the building blocks of an inclusive recovery, whereas `r building_blocks_by_geography_pct[["monroe"]]` of Monroe County's were.

```{r}

#| fig-cap: !expr source

data %>%
    mutate(building_block = if_else(is.na(building_blocks), "Allocated to other programs", "Allocated to a building block")) %>%
    group_by(building_block, geography) %>%
    summarise(allocated = sum(allocation, na.rm = TRUE)) %>%
      ungroup() %>%
    mutate(percentage = allocated / sum(allocated) * 100) %>%
    mutate(combined = interaction(as.factor(geography), as.factor(building_block), lex.order = TRUE)) %>%
    ggplot(aes(x = "", y = allocated, fill = combined, alpha = building_block)) +
    geom_col(color = "black") +
    geom_text(aes(label = sprintf("%.1f%%", percentage)),
              position = position_stack(vjust = 0.5)) +
    coord_polar(theta = "y") +

    scale_fill_manual(
        values = c("Monroe County.Allocated to a building block" = alpha("#D6A123", 1), 
                   "Monroe County.Allocated to other programs" = alpha("#d2d2d2", 1),
                   "Rochester.Allocated to a building block" = alpha("#ED0A72", 1),
                   "Rochester.Allocated to other programs" = alpha("#696969", 1)),
        labels = c("Monroe County - Building Block", "Monroe County - Other Programs", "Rochester - Building Block", "Rochester - Other Programs"),
        name = "Allocation"
    ) +
    scale_alpha_manual(
        values = c("Allocated to a building block" = 1, "Allocated to other programs" = 1),
        guide = "none"
    ) +
    theme_void()

```

## What types of inclusive recovery strategies are supported?

Out of the funds allocated to programs that align with the five building blocks
of an inclusive recovery, the most funding has been allocated to reinvesting in
disinvested communities, while the least has been allocated to creating jobs for
residents hardest hit by the pandemic or who face the greatest barriers to
employment. The figure below shows how that funding is divided among the five
building blocks and includes only the funds allocated to programs that align
with the building blocks.

```{r}
#| fig-cap: !expr source

total_allocations <-
  data %>% 
  summarise(total_allocation = sum(allocation, na.rm = TRUE), .by = "building_blocks") %>% 
  arrange(desc(total_allocation))

data_reordered <- 
  data %>%
  mutate(building_blocks = case_when(
                                      str_detect(building_blocks, pattern = "Create jobs")  ~ "Create jobs",
         str_detect(building_blocks, "build wealth") ~ "Build wealth",
         str_detect(building_blocks, "Stabilize housing") ~ "Stabilize housing",
         .default = building_blocks)) %>% 
  left_join(total_allocations, by = "building_blocks") %>%
  mutate(building_blocks = reorder(building_blocks, total_allocation)) %>%
  summarise(allocation = sum(allocation, na.rm = TRUE), .by = c("building_blocks", "geography")) %>%
  drop_na()  %>% 
  mutate(total_allocation = sum(allocation), .by = 'building_blocks') %>% 
  mutate(building_blocks = reorder(building_blocks, total_allocation))

data_reordered %>% 
  ggplot(aes(x = building_blocks, y = allocation, fill = geography)) +
  geom_col() +
  scale_y_continuous(labels = scales::label_number(scale = 1/1e6, suffix = 'M', prefix = '$'),
                     limits = c(0, 100 * 1e6),
                     breaks = seq(0, 100 * 1e6, by = 25 * 1e6)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 20)) +
  scale_fill_discrete(guide = guide_legend(reverse = TRUE)) +
  coord_flip() +
  scale_fill_manual(values = racf_palette) +
  labs(x = NULL, y = 'Total Allocation')
```

## What policy areas are being funded?

```{r}

total_allocated <- summarise(data, total = sum(allocation, na.rm = TRUE)) %>% pull() 
total_spent <-  summarise(data, total_spent = sum(spent, na.rm = TRUE)) %>% pull() 
pct_spent <- total_spent / total_allocated

allocations_by_topic <-
  data %>%
  summarise(topic_allocation = sum(allocation, na.rm = TRUE), .by = 'topic') %>%
  arrange(desc(topic_allocation))

top3 <-
  allocations_by_topic %>% 
  slice_max(topic_allocation, n = 3) %>% 
  pull(topic) %>% 
  str_flatten_comma(", and ") %>% 
  str_to_lower()

bottom3 <-
  allocations_by_topic %>% 
  slice_min(topic_allocation, n = 3) %>% 
  pull(topic) %>% 
  str_flatten_comma(", and ") %>% 
  str_to_lower()
```

```{epoxy, .transformer =  epoxy_transform_inline(.percent = scales::label_percent(accuracy = 0.1), .dollar = scales::label_dollar(scale = 1/1e6, suffix = "M", accuracy = 1))}
  
  
The City of Rochester and Monroe County have allocated almost **{.dollar total_allocated}** of SLFRF funds, and, of those, **{.pct pct_spent}** have been reported as spent. The figure below shows how that funding has been allocated across policy categories and includes all allocations, not just those that align with the building blocks of an inclusive recovery.  
 
By category, most of the funds have been allocated to {top3}, while the least have been allocated to {bottom3}. 

```

::: panel-tabset
## Allocated

```{r}
#| fig-cap: !expr source
data_reordered <- 
  data %>%
  left_join(allocations_by_topic, by = "topic") %>%
  mutate(topic = reorder(topic, topic_allocation)) %>%
  summarise(allocation = sum(allocation, na.rm = TRUE), .by = c("topic", "geography"))

# Plotting the graph
ggplot(data_reordered, aes(x = topic, y = allocation, fill = geography)) +
  geom_col() +
  scale_y_continuous(labels = scales::label_number(scale = 1/1e6, suffix = 'M', prefix = '$'),
                     limits = c(0, 100 * 1e6),
                     breaks = seq(0, 100 * 1e6, 25 * 1e6)) +
  scale_fill_discrete(guide = guide_legend(reverse = TRUE)) +
  coord_flip() +
  labs(x = NULL, y = 'Total allocation') +
  scale_fill_manual(values = racf_palette)
```

## Spent

```{r}
#| fig-cap: !expr source

allocation_topic_order <-
  data_reordered %>% 
  summarise(allocation = sum(allocation, na.rm = TRUE), .by = 'topic') %>% 
  arrange(desc(allocation)) %>% 
  distinct(topic) %>% 
  pull()

data %>% 
  filter(geography == 'Rochester') %>% 
  mutate(geography = paste0(geography, ' City Spending')) %>% 
  summarise(spent = sum(spent, na.rm = TRUE), .by = c("topic", "geography")) %>%
  mutate(total_spent = sum(spent), .by = 'topic') %>% 
  mutate(topic = factor(topic, levels = rev(allocation_topic_order))) %>% 
  ggplot(aes(x = topic, y = spent, fill = geography)) +
  geom_col() +
  scale_y_continuous(labels = scales::label_number(scale = 1/1e6, suffix = 'M', prefix = '$'),
                     limits = c(0, 100 * 1e6)) +
  scale_fill_manual(values = "#fdbf11") +
  coord_flip() +
  labs(x = NULL, y = 'Total spent',
       caption = "Note: Data on allocations spent were only available from the city of Rochester.") +
  scale_fill_manual(values = racf_palette)

```
:::

## What subtopics are funded within each policy area?

The figure below provides a more detailed breakdown of allocations to each
policy area. Each policy area tab breaks down the allocations into subtopics.
For example, most of the money allocated to community and economic development
has gone to workforce development.

::: panel-tabset
### Community and Economic Development

```{r}
#| fig-cap: !expr source
data %>% 
  filter(str_detect(topic, "Community and Economic Development")) %>% 
  summarise(allocated = sum(allocation, na.rm = TRUE), .by = c('subtopic', 'geography')) %>% 
  ggplot(aes(x = subtopic, y = allocated, fill = geography)) +
  geom_col() +
    scale_y_continuous(labels = scales::label_number(scale = 1/1e6, suffix = 'M', prefix = '$'),
                     limits = c(0, 50 * 1e6)) +
  coord_flip() +
  scale_fill_manual(values = racf_palette) + 
  scale_x_discrete(limits = rev) +
  labs(x = NULL, y = "Total allocation")
```

### Infrastructure

```{r}
#| fig-cap: !expr source
data %>% 
  filter(str_detect(topic, "Infrastructure")) %>% 
  summarise(allocated = sum(allocation, na.rm = TRUE), .by = c('subtopic', 'geography')) %>% 
  ggplot(aes(x = subtopic, y = allocated, fill = geography)) +
  geom_col() +
    scale_y_continuous(labels = scales::label_number(scale = 1/1e6, suffix = 'M', prefix = '$'),
                     limits = c(0, 50 * 1e6)) +
  coord_flip() +
  scale_fill_manual(values = racf_palette) +
    scale_x_discrete(limits = rev) +
  labs(x = NULL, y = "Total allocation")
```

### Housing

```{r}
#| fig-cap: !expr source
data %>% 
  filter(str_detect(topic, "Housing")) %>% 
  summarise(allocated = sum(allocation, na.rm = TRUE), .by = c('subtopic', 'geography')) %>% 
  ggplot(aes(x = subtopic, y = allocated, fill = geography)) +
  geom_col() +
    scale_y_continuous(labels = scales::label_number(scale = 1/1e6, suffix = 'M', prefix = '$'),
                     limits = c(0, 50 * 1e6)) +
  coord_flip() +
  scale_fill_manual(values = racf_palette) +  
  scale_x_discrete(limits = rev) +
  labs(x = NULL, y = "Total allocation")
```

### Public Safety

```{r}
#| fig-cap: !expr source
data %>% 
  filter(str_detect(topic, "Public Safety")) %>% 
  summarise(allocated = sum(allocation, na.rm = TRUE), .by = c('subtopic', 'geography')) %>% 
  ggplot(aes(x = subtopic, y = allocated, fill = geography)) +
  geom_col() +
    scale_y_continuous(labels = scales::label_number(scale = 1/1e6, suffix = 'M', prefix = '$'),
                     limits = c(0, 50 * 1e6)) +
  coord_flip() +
  scale_fill_manual(values = racf_palette) +
    scale_x_discrete(limits = rev) +
  labs(x = NULL, y = "Total allocation")
```

### Social Services

```{r}
#| fig-cap: !expr source
data %>% 
  filter(str_detect(topic, "Social Services")) %>% 
  summarise(allocated = sum(allocation, na.rm = TRUE), .by = c('subtopic', 'geography')) %>% 
  ggplot(aes(x = subtopic, y = allocated, fill = geography)) +
  geom_col() +
    scale_y_continuous(labels = scales::label_number(scale = 1/1e6, suffix = 'M', prefix = '$'),
                     limits = c(0, 50 * 1e6)) +
  coord_flip() +
  scale_fill_manual(values = racf_palette) + 
    scale_x_discrete(limits = rev) +
  labs(x = NULL, y = "Total allocation")
```

### Public Health

```{r}
#| fig-cap: !expr source
data %>% 
  filter(str_detect(topic, "Public Health")) %>% 
  summarise(allocated = sum(allocation, na.rm = TRUE), .by = c('subtopic', 'geography')) %>% 
  ggplot(aes(x = subtopic, y = allocated, fill = geography)) +
  geom_col() +
    scale_y_continuous(labels = scales::label_number(scale = 1/1e6, suffix = 'M', prefix = '$'),
                     limits = c(0, 50 * 1e6)) +
  coord_flip() +
  scale_fill_manual(values = racf_palette) +
    scale_x_discrete(limits = rev) +
  labs(x = NULL, y = "Total allocation")
```

### Operations

```{r}
#| fig-cap: !expr source
data %>% 
  filter(str_detect(topic, "Operations")) %>% 
  summarise(allocated = sum(allocation, na.rm = TRUE), .by = c('subtopic', 'geography')) %>% 
  ggplot(aes(x = subtopic, y = allocated, fill = geography)) +
  geom_col() +
    scale_y_continuous(labels = scales::label_number(scale = 1/1e6, suffix = 'M', prefix = '$'),
                     limits = c(0, 50 * 1e6)) +
  coord_flip() +
    scale_x_discrete(limits = rev) +
  scale_fill_manual(values = racf_palette) +
  labs(x = NULL, y = "Total allocation")
```
:::

## How does funding align with the Rochester Area Community Foundation's priorities?

```{r racf-funding-pct}
allocated_to_racf_pct <-
  data %>% 
  mutate(is_priority = !is.na(racf_categories)) %>% 
  summarise(allocation = sum(allocation, na.rm = TRUE), .by = "is_priority") %>% 
  mutate(total = sum(allocation, na.rm = TRUE),
         pct = allocation / total) %>% 
  filter(is_priority == TRUE) %>% 
  pull(pct)

```

The Rochester Area Community Foundation's key priorities for investment in the
region include:

-   Closing the academic achievement and opportunity gap;

-   Fostering racial and ethnic understanding and equity;

-   Partnering against poverty;

-   Supporting arts and culture; Preserving historic assets;

-   Advancing environmental justice and sustainability; and

-   Promoting successful aging.

```{epoxy, .transformer = epoxy_transform_inline(.percent = scales::label_percent(accuracy = 0.1))}

Overall, **{.pct allocated_to_racf_pct}** of SLFRF funding has been allocated towards these priority areas. The figure below shows how SLFRF funding is divided among the priority topics and includes only the funds allocated to programs that align with one of RACF's priority areas.


```

```{r}
#| fig-cap: !expr source
data %>% 
  summarise(allocation = sum(allocation, na.rm = TRUE), .by = c("racf_categories", "geography")) %>% 
  drop_na() %>% 
  mutate(total_allocation = sum(allocation), .by = 'racf_categories') %>% 
  mutate(racf_categories = reorder(racf_categories, total_allocation)) %>% 
  ggplot(aes(x = racf_categories, y = allocation, fill = geography)) +
  geom_col() +
  scale_y_continuous(labels = scales::label_number(scale = 1/1e6, suffix = 'M', prefix = '$')) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 20)) +
  scale_fill_discrete(guide = guide_legend(reverse = TRUE)) +
  scale_fill_manual(values = racf_palette) +
  coord_flip() +
  labs(x = NULL, y = 'Total Allocation')
```

## Which neighborhoods are the funds being spent in?

The map below shows how the City of Rochester's SLFRF capital investments map
onto racial characteristics of neighborhoods, as well as the original Federal
redlining maps for the city. Click on the tabs at the top to see how they
overlap with the percent of residents who are Black in a neighborhood and the
percent of residents who are Hispanic/Latino[^1].

[^1]: We use the term "Hispanic/Latino" in this map because this is the term
    used in the data collected by the American Community Survey. We recognize
    that this may not be the preferred identifier for all, and we remain
    committed to employing inclusive language whenever possible. 

[Redlining](https://www.npr.org/2017/05/03/526655831/a-forgotten-history-of-how-the-u-s-government-segregated-america)
refers to the system that the Federal Housing Administration and the Home
Owners' Loan Corporation used to grade the profitability of neighborhoods in the
late 1930s. The four categories were green ("best"), blue ("still desirable"),
yellow ("definitely declining"), and red ("hazardous"). These grades were
largely based on the neighborhood's racial, ethnic, socioeconomic, and religious
composition. Generally, white, middle-class neighborhoods received FHA home
loans, whereas many Black and Hispanic/Latino neighborhoods were deemed
hazardous and declining in value and did not receive FHA insured mortgages or
loans. These maps [had long lasting
effects](https://www.econstor.eu/bitstream/10419/200568/1/1010730592.pdf) on
racial segregation, homeownership, and house values in redlined neighborhoods.

To increase equity in the region, leaders must overinvest in communities that
have been underinvested in historically. These investments must be those that
[benefit incumbent
residents](https://www.urban.org/research/publication/what-policies-and-programs-can-support-inclusive-recovery-rochester-new-york),
meaning that they should not be investments that only benefit new, incoming
wealthier residents, or those that have negative impacts on immediate neighbors,
like a sewage treatment facility or a highway that pollutes the air. And, they
must be investments that [community members
want](https://www.urban.org/research/publication/aligning-use-recovery-funds-community-goals-rochester-new-york),
particularly historically excluded members. The maps below give us a first
approximation of how equitably investments are distributed, but further
exploration of how these investments align with the goals of community members
and how much they benefit historically excluded residents is necessary to ensure
that they are increasing equity within those communities. 

::: panel-tabset
```{r redlining-data-wrangling}
#|fig-cap: !expr redlining_source 

redlining_source <-   glue::glue('Source: {tags$a("The Mapping Inequality Project", href = "https://dsl.richmond.edu/panorama/redlining/#loc=5/39.1/-94.58")} and ACS Data 2017-2021')

redlining <- 
  sf::read_sf("data/data-raw/redlining.geojson.txt") %>%
  filter(city == 'Rochester', state == 'NY') 

spending <- 
  readxl::read_xlsx("data/data-raw/City of Rochester ARPA capital projects for ACT Rochester.xlsx", sheet = "ARPA spending status",
                    skip = 2) %>% 
  janitor::clean_names() %>% 
  select(street, project_name, description, arpa_funding) %>% 
  mutate(arpa_funding_numeric = arpa_funding,
         arpa_funding = scales::label_dollar(scale = 1/1e6, suffix = "M")(arpa_funding)) %>% 
  rename_with(~str_to_title(.x) %>% str_replace_all("_", " "), everything()) %>% 
  rename(`ARPA Funding` = `Arpa funding`)
  
genesee_spending <- 
  spending %>% filter(str_detect(`Street`,"873|Genesee"))

project_locations <-
  read_csv("data/data-raw/addresses-geocoded.csv") %>% 
  janitor::clean_names() %>% 
  filter(longitude != 0) %>% 
  sf::st_as_sf(coords = c('longitude', 'latitude'), crs = 4326) %>% 
  st_transform(st_crs(4326)) %>% 
  filter(type == "arpa_spending_status") %>% 
  distinct(match_addr, .keep_all = TRUE) %>% 
  left_join(spending, by = c("f_address" = "Street"))  %>% 
  mutate(`Project name` = if_else(str_detect(match_addr, "873|Genesee"), genesee_spending$`Project name`, `Project name`),
         `Description` = if_else(str_detect(match_addr, "873|Genesee"), genesee_spending$`Description`, `Description`),
                `ARPA Funding` = if_else(str_detect(match_addr, "873|Genesee"), genesee_spending$`ARPA Funding`, `ARPA Funding`),
                         `Arpa funding numeric` = if_else(str_detect(match_addr, "873|Genesee"), genesee_spending$`Arpa funding numeric`, `Arpa funding numeric`)) %>% 
  drop_na(`Project name`)


```

```{r race-data-wrangling, echo=FALSE, message=FALSE, warning=FALSE,error=FALSE}
rochester <- 
  tigris::places("NY", cb = TRUE, year = 2021) %>% 
  filter(NAME == "Rochester") %>% 
  sf::st_geometry()

race_vars <- c(
    black = "B03002_004",
    hispanic = "B03002_012"
  ) 

race <- tidycensus::get_acs(
    geography = "tract",
    state = "NY",
    variables = race_vars,
    summary_var = "B03002_001",
    year = 2021,
    geometry = TRUE
  ) %>%
  st_filter(rochester, .predicate = st_intersects) %>% 
 as_tibble() %>% 
  janitor::clean_names() %>% 
  select(geoid, total_population = summary_est, race = variable, value = estimate, geometry) %>% 
  summarise(value = sum(value, na.rm = TRUE),
            percent = value/ total_population,
            .by = c("geoid", "race", "total_population", "geometry")) %>% 
  select(-c(total_population, value)) %>% 
  pivot_wider(names_from = 'race', values_from = 'percent', names_prefix = "pct_") %>% 
  sf::st_as_sf()


```

```{r project-locations-map}
my_popup <-
  glue::glue("<div style='width: 300px; word-wrap: break-word;'><strong>{project_locations$`Project name`}</strong><br>",
             "<span style='color: grey;'>ARPA Funding: </span>{project_locations$`ARPA Funding`}<br>",
             "<span style='color: grey;'>Description: </span>{project_locations$`Description`}</div>") %>% 
  map(htmltools::HTML)


my_label <- glue::glue("<strong>{project_locations$`Project name`}</strong> ({project_locations$`ARPA Funding`})") %>%
  map(htmltools::HTML)

project_location_map <- 
  mapview(project_locations %>% 
            mutate(type = if_else(type == "arpa_spending_status", "City of Rochester Capital Projects", type)),
          zcol = 'type', cex = "Arpa funding numeric", col.regions = "grey",
          popup = my_popup,
          label = my_label,
          legend = TRUE, 
          layer.name = "Project type") # Use blue to red color scale for project types

```


### Redlining

```{r redlining-map}

  
# Create the map
m <- mapviewOptions(fgb = TRUE) # This will make the base map faster by using a faster background map
redlining_palette <- c(palette_urbn_main['green'], palette_urbn_main['cyan'], palette_urbn_main['yellow'], palette_urbn_main['red'])
m <-
  mapview(redlining %>% rename(Name = name, `Redlining grade` = holc_grade),
          zcol = 'Redlining grade',
           popup = popupTable(redlining %>% rename(Name = name, `Redlining grade` = holc_grade), zcol = c("Name", "Redlining grade"),
                                 feature.id = FALSE,
                                 row.numbers = FALSE),
          col.regions = colorRampPalette(redlining_palette), legend = TRUE, layer.name = "Redlining grade") 


m + project_location_map
```

```{r}
#| eval: false

tmap_mode("view")
make_redlining_map <- function(data){
  
  redlining_palette <- c(palette_urbn_main['green'], palette_urbn_main['cyan'], palette_urbn_main['yellow'], palette_urbn_main['red'])
  
  tmap_redlining <-
    tm_shape(data, name = "Redlining grade") +
    tm_polygons(col = "holc_grade", 
                title = "Redlining grade",
                id = "name",
                group = "holc_grade",
                palette = redlining_palette)
  
  
  tmap_projects <-
    project_locations %>%
    mutate(type = str_replace_all(type, "_"," ") %>% str_to_sentence() %>% str_replace("Arpa", "ARPA")) %>% 
    rename(arpa_funding = `Arpa funding numeric`) %>% 
    tm_shape(name = "Project type") +
    tm_dots(col = "type", id = "Project name",
            alpha = 0.9,
            border.alpha = 0.5,
            style="fixed",
            contrast = 1,
            title = expr("Project type"),
            palette = palette_urbn_gray[[5]],
            size = "arpa_funding",
            popup.vars = c("Project name", "ARPA funding"="arpa_funding", "Description"),
            popup.format = list(fun = scales::label_dollar(scale = 1/1e6, accuracy = 1)))
  
  tmap_redlining + tmap_projects
}


m1 <- make_redlining_map(redlining) + tm_view(set.view = 12)

m1 


```

### Percent Black

```{r pct-black-map}
mapviewOptions(fgb = FALSE)
black_map <-
  mapview(select(race, geoid, pct_black),
        zcol = "pct_black",
        layer.name = "Percent Black",
        label = scales::label_percent(accuracy = 1)(race$pct_black),
        col.regions = colorRampPalette(palette_urbn_cyan),
        popup = popupTable(select(race %>% st_drop_geometry(), 
                                  geoid, `Percent Black` = pct_black) %>% 
                             mutate(`Percent Black` = scales::label_percent(accuracy = 0.1)(`Percent Black`)), 
                           row.numbers = FALSE, feature.id = FALSE),
        highlight = highlightOptions(
          weight = 2,
          color = "#666",
          fillOpacity = 0.7,
          bringToFront = TRUE
        ),
        map.types = "CartoDB.Positron",
        legend = TRUE)

 black_map + project_location_map

```

### Percent Hispanic/Latino


```{r pct-hispanic-map}
mapviewOptions(fgb = FALSE)
hispanic_map <-
  mapview(select(race, geoid, pct_hispanic),
        zcol = "pct_hispanic",
        label = scales::label_percent(accuracy = 1)(race$pct_hispanic),
        layer.name = "Percent Hispanic or Latino",
        col.regions = colorRampPalette(palette_urbn_green),
        popup = popupTable(select(race %>% st_drop_geometry(), 
                                  geoid, `Percent Hispanic/Latino` = pct_hispanic) %>% 
                             mutate(`Percent Hispanic/Latino` = scales::label_percent(accuracy = 0.1)(`Percent Hispanic/Latino`)), 
                           row.numbers = FALSE, feature.id = FALSE),
         highlight = highlightOptions(
                weight = 2,
                color = "#666",
                fillOpacity = 0.7,
                bringToFront = TRUE
                ),
        map.types = "CartoDB.Positron",
        legend = TRUE) 

  hispanic_map + project_location_map

```
:::

<br>

## Explore All Programs Funded {#programs-table}

This table shows all programs that the City of Rochester and Monroe County have
allocated SLFRF funds to, as well as their building block, policy area, policy
subtopic, and RACF priority area category. The default display on the table
shows the programs in order from largest to smallest allocation. You can use the
arrows next to each column title to sort the table by that column, and you can
use the search bars under each column or the overall search bar to search the
table. 

Note: Data on spending were only available from the City of Rochester 

Data current as of: `r last_update_date`

```{r}
#|label: "programs-table"
data %>%
  # Should subtopic be included?
  select(
    program,
    geography,
    allocated = allocation,
    spent,
    building_blocks,
    policy_area = topic,
    subtopic, 
    racf_priority = racf_categories,
    description = program_description,
        agency,
  ) %>%
  arrange(desc(allocated)) %>%
  # unite(col = "topic", c(topic, building_blocks, racf_categories), sep = '; ') %>%
  # mutate(topic = str_replace_all(topic, "; NA", "")) %>%
  gt() %>%
  cols_label_with(
  fn = ~ janitor::make_clean_names(., case = "title")
) |>
  tab_style(style = cell_text(stretch = "ultra-condensed",
                              whitespace = "pre-line",
                              size = pct(80)),

            locations = cells_body(c(program:agency))) %>%
   cols_width(
     program ~ px(250),
     geography ~ px(115),
     allocated ~ px(100),
     spent ~ px(100),
     building_blocks ~ px(110),
     policy_area ~ px(110), 
     subtopic ~ px(110),
     racf_priority ~ px(110),
     description ~ px(500),
     agency ~ px(180)
   ) %>%
  fmt_number(c(allocated, spent), decimals = 2, scale_by = 1/1e6, pattern = "${x}M") %>%
  tab_options(heading.padding = px(1)) %>%
    opt_interactive(
    use_resizers = TRUE,
    use_highlight = TRUE,
    use_search = TRUE,
    use_compact_mode = TRUE,
    use_text_wrapping = TRUE,
    use_page_size_select = TRUE,
    use_filters = TRUE
  ) %>%
  tab_options(
      heading.background.color = racf_palette[1],
            table.width = px(900))
```

<br>

## About the Dashboard

This dashboard was created by the [Urban Institute](https://www.urban.org/) in
partnership with and support from [The Rochester Area Community Foundation
(RACF)](https://www.racf.org/) to visualize Monroe County and the City of
Rochester's ARPA spending by the five building blocks of inclusive recovery,
policy category, and RACF's investment priorities. By tracking recovery funding
expenditures, this dashboard allows us to monitor public spending by the
categories most critical in supporting an inclusive recovery from the COVID-19
pandemic.

```{r}


data %>%
  mutate(topic = str_replace_all(topic, "; NA", "")) %>% 
  select(program, program_description, geography, legislation, topic, building_blocks, racf_categories, allocation, spent, agency, source, source_url) %>% 
  downloadthis::download_this(
    output_name = "racf-dashboard-data",
    output_extension = ".csv",
    button_label = "Download all the data used in the dashboard (.csv)",
    button_type = "success",
    has_icon = TRUE,
    icon = "fa fa-save"
  )

```

<br>

For more information about the dashboard, please contact [Meg
Norris](mailto:mnorris@racf.org) (The Rochester Area community Foundation) or
[Christina Stacy](mailto:cstacy@urban.org) (Urban Institute).

Click For [Glossary of Terms](glossary.qmd)

The code used to create this dashboard was writen by [Manuel Alcalá
Kovalski](mailto:malcalakovalski@urban.org) and can be found on
[GitHub](https://github.com/UI-Research/rochester-dashboard).
